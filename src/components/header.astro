---
import { Image } from "astro:assets";
import menus from "../collections/menu.json";
import Logo from "../components/logo.astro";

const isSpanish =
  Astro.url.pathname === "/" ||
  Astro.url.pathname === "/contacto" ||
  Astro.url.pathname === "/projects";
console.log("Estamos en español", isSpanish);

const isEnglish =
  Astro.url.pathname === "/en/" ||
  Astro.url.pathname === "/en/contact" ||
  Astro.url.pathname === "/en/projects";
console.log("We are in English", isEnglish);
---

<!-- This is an invisible div with relative position so that it takes up the height of the menu (because menu is absolute/fixed) -->
<div class="relative w-full h-20 opacity-0 pointer-events-none"></div>
<header id="header" class="absolute top-0 z-50 w-full h-20">
  <div
    class="flex items-center justify-between h-full max-w-5xl pl-6 pr-4 mx-auto border-b border-l-0 border-r-0 border-transparent select-none lg:border-r lg:border-l lg:rounded-b-xl"
  >
    <Logo />
    <div
      id="mobileMenuBackground"
      onclick="closeMobileMenu()"
      class="fixed inset-0 z-20 hidden w-screen h-screen duration-300 ease-out bg-white/90 dark:bg-neutral-950/90"
    >
    </div>
    <nav
      class="relative z-30 flex flex-row-reverse justify-start w-full text-sm sm:justify-end text-neutral-500 dark:text-neutral-400 sm:flex-row mr-4 items-center"
    >
      <div
        id="openMenu"
        class="flex flex-col items-end justify-center w-6 h-6 ml-4 cursor-pointer sm:hidden"
      >
        <svg
          class="w-8 h-8 dark:text-neutral-200"
          fill="none"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          viewBox="0 0 24 24"
          stroke="currentColor"><path d="M4 8h16M4 16h16"></path></svg
        >
      </div>
      <div
        id="closeMenu"
        class="flex flex-col items-end justify-center hidden w-6 h-6 ml-4 -translate-x-1 cursor-pointer sm:hidden"
      >
        <svg
          class="w-6 h-6 text-neutral-600 dark:text-neutral-200"
          fill="none"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          viewBox="0 0 24 24"
          stroke="currentColor"><path d="M6 18L18 6M6 6l12 12"></path></svg
        >
      </div>
      <div
        id="menu"
        class="fixed top-[75px] ease-out duration-300 sm:top-0 w-full left-0 sm:py-0 pt-7 pb-4 dm:mx-0 left-0 z-40 flex-col items-end justify-start hidden w-full h-auto text-sm sm:text-base sm:h-auto sm:relative sm:flex-row sm:flex sm:text-sm sm:w-auto sm:pr-0 sm:pt-0"
      >
        <div
          class="absolute inset-0 top-0 right-0 block w-full h-full px-3 sm:hidden"
        >
          <div
            class="relative w-full h-full bg-white border border-dashed border-neutral-300 dark:border-neutral-700 backdrop-blur-sm rounded-xl dark:bg-neutral-950"
          >
          </div>
        </div>
        {
          menus.map((menu) => {
            // const isActive = Astro.url.pathname === menu.url;
            const isEnglish = Astro.url.pathname.startsWith("/en"); // Verifica si la URL es en inglés
            const isActive = isEnglish
              ? Astro.url.pathname === menu.urlEn
              : Astro.url.pathname === menu.url;
            return (
              <a
                href={isEnglish ? menu.urlEn : menu.url}
                class={`relative flex items-center justify-center w-full px-3 py-2 font-medium tracking-wide text-center duration-200 ease-out mx-auto my-auto h-full sm:py-0 sm:mb-0 md:w-auto hover:text-neutral-900 dark:hover:text-white ${isActive ? "text-black dark:text-black" : ""}`}
              >
                {isEnglish ? menu.nameEn : menu.name}
              </a>
            );
          })
        }
      </div>
      <div
        id="darkToggle"
        class="relative flex items-center pl-6 ml-4 font-medium tracking-wide cursor-pointer text-neutral-800 group dark:text-white"
      >
        <div
          class="absolute left-0 flex items-center justify-center w-6 h-6 overflow-hidden border-b border-transparent horizon group-hover:border-neutral-600"
        >
          <svg
            class="absolute w-6 h-6 transition duration-700 transform ease"
            id="sun"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            viewBox="0 0 24 24"
            stroke="currentColor"
            ><path
              d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
            ></path></svg
          >
          <svg
            class="absolute hidden w-6 h-6 transition duration-700 transform ease"
            id="moon"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            viewBox="0 0 24 24"
            stroke="currentColor"
            ><path
              d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
            ></path></svg
          >
        </div>
        <span class="hidden sm:inline-block">
          <span id="dayText" class="ml-2">
            {isSpanish ? "Modo claro" : "Light mode"}
          </span>
          <span id="nightText" class="hidden ml-2">
            {isSpanish ? "Modo Oscuro" : "Dark mode"}
          </span>
        </span>
      </div>
      <div class="ml-4">
        {
          isSpanish ? (
            <a
              href="/en"
              class=" flex items-center justify-center w-full px-1 py-1 font-medium tracking-wide text-center duration-200 ease-out sm:py-1 sm:mb-0 md:w-auto hover:text-neutral-900 dark:hover:text-white border border-neutral-300 dark:border-neutral-700 rounded-md bg-neutral-100 dark:bg-neutral-800 hover:bg-neutral-200 dark:hover:bg-neutral-900 shadow-md transition-all"
            >
              <Image
                width={25}
                height={25}
                format="webp"
                quality={80}
                src="/assets/icons/eeuu.svg"
                alt="Logo de Estados Unidos"
              />
            </a>
          ) : (
            <a
              href="/"
              class=" flex items-center justify-center w-full px-1 py-1 font-medium tracking-wide text-center duration-200 ease-out sm:py-1 sm:mb-0 md:w-auto hover:text-neutral-900 dark:hover:text-white border border-neutral-300 dark:border-neutral-700 rounded-md bg-neutral-100 dark:bg-neutral-800 hover:bg-neutral-200 dark:hover:bg-neutral-900 shadow-md transition-all"
            >
              <Image
                width={25}
                height={25}
                format="webp"
                quality={80}
                src="/assets/icons/spain.svg"
                alt="Logo de España"
              />
            </a>
          )
        }
      </div>
    </nav>
  </div>
</header>
<!-- <script is:inline>
  function toggleMenu() {
    const openMenu = document.getElementById("openMenu");
    const closeMenu = document.getElementById("closeMenu");
    const menu = document.getElementById("menu");
    const mobileMenuBackground = document.getElementById(
      "mobileMenuBackground"
    );

    openMenu.addEventListener("click", () => {
      menu.classList.remove("hidden");
      mobileMenuBackground.classList.remove("hidden");
      openMenu.classList.add("hidden");
      closeMenu.classList.remove("hidden");
    });

    closeMenu.addEventListener("click", () => {
      menu.classList.add("hidden");
      mobileMenuBackground.classList.add("hidden");
      openMenu.classList.remove("hidden");
      closeMenu.classList.add("hidden");
    });

    mobileMenuBackground.addEventListener("click", () => {
      menu.classList.add("hidden");
      mobileMenuBackground.classList.add("hidden");
      openMenu.classList.remove("hidden");
      closeMenu.classList.add("hidden");
    });
  }

  // lo mismo para el boton de dark mode y su animacion de transicion
  function toggleDarkMode() {
    const darkToggle = document.getElementById("darkToggle");
    const sun = document.getElementById("sun");
    const moon = document.getElementById("moon");
    const dayText = document.getElementById("dayText");
    const nightText = document.getElementById("nightText");

    darkToggle.addEventListener("click", () => {
      if (document.documentElement.classList.contains("dark")) {
        document.documentElement.classList.remove("dark");
        localStorage.setItem("dark_mode", "false");
        sun.classList.remove("hidden");
        moon.classList.add("hidden");
        dayText.classList.remove("hidden");
        nightText.classList.add("hidden");
      } else {
        document.documentElement.classList.add("dark");
        localStorage.setItem("dark_mode", "true");
        sun.classList.add("hidden");
        moon.classList.remove("hidden");
        dayText.classList.add("hidden");
        nightText.classList.remove("hidden");
      }
    });
  }

  let onScroll; // Variable para almacenar el handler del scroll

  function stickyHeader() {
    console.log("stickyHeader ejecutado");

    const header = document.getElementById("header");
    const sticky = header.offsetTop;

    // Si ya existe un event listener, lo eliminamos
    if (onScroll) {
      window.removeEventListener("scroll", onScroll);
    }

    onScroll = () => {
      if (window.pageYOffset > sticky) {
        header.classList.add("bg-white", "dark:bg-neutral-950");
        header.classList.remove("border-transparent");
      } else {
        header.classList.remove("bg-white", "dark:bg-neutral-950");
        header.classList.add("border-transparent");
      }
    };

    window.addEventListener("scroll", onScroll);
  }

  function initializeScripts() {
    console.log("initializeScripts ejecutado");

    toggleMenu();
    toggleDarkMode();
    stickyHeader();
  }

  // Ejecutamos las funciones al cargar la página por primera vez
  initializeScripts();

  // Volvemos a ejecutar las funciones después de cada navegación
  document.addEventListener("astro:page-load", () => {
    console.log("astro:page-load disparado");
    initializeScripts();
  });
</script> -->
